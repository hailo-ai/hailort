syntax = "proto3";

option optimize_for = LITE_RUNTIME;

message GenAIRpcRequest {
    oneof request {
        LLM_Create_Request llm_create = 1;
        LLM_Get_Generator_Params_Request llm_get_generator_params = 2;
        LLM_Generator_Create_Request llm_generator_create = 3;
        LLM_Generator_Write_Request llm_generator_write = 4;
        LLM_Generator_Generate_Request llm_generator_generate = 5;
        LLM_Generator_Read_Request llm_generator_read = 6;
        LLM_Tokenize_Request llm_tokenize = 7;
        LLM_Clear_Context_Request llm_clear_context = 8;
        LLM_Release_Request llm_release = 9;

        VLM_Create_Request vlm_create = 10;
        VLM_Generator_Generate_Request vlm_generator_generate = 11;

        Text2Image_Create_Request text2image_create = 12;
        Text2Image_Get_Generator_Params_Request text2image_get_generator_params = 13;
        Text2Image_Generator_Create_Request text2image_generator_create = 14;
        Text2Image_Generator_Generate_Request text2image_generator_generate = 15;
        Text2Image_Get_IP_Adapter_Frame_Info_Request text2image_get_ip_adapter_frame_info = 16;
        Text2Image_Tokenize_Request text2image_tokenize = 17;
        Text2Image_Generator_Set_Initial_Noise_Request text2image_generator_set_initial_noise = 18;
        Text2Image_Release_Request text2image_release = 19;
    }
}

message GenAIRpcReply {
    oneof reply {
        LLM_Create_Reply llm_create = 1;
        LLM_Get_Generator_Params_Reply llm_get_generator_params = 2;
        LLM_Generator_Create_Reply llm_generator_create = 3;
        LLM_Generator_Write_Reply llm_generator_write = 4;
        LLM_Generator_Generate_Reply llm_generator_generate = 5;
        LLM_Generator_Read_Reply llm_generator_read = 6;
        LLM_Tokenize_Reply llm_tokenize = 7;
        LLM_Clear_Context_Reply llm_clear_context = 8;
        LLM_Release_Reply llm_release = 9;

        VLM_Create_Reply vlm_create = 10;
        VLM_Generator_Generate_Reply vlm_generator_generate = 11;

        Text2Image_Create_Reply text2image_create = 12;
        Text2Image_Get_Generator_Params_Reply text2image_get_generator_params = 13;
        Text2Image_Generator_Create_Reply text2image_generator_create = 14;
        Text2Image_Generator_Generate_Reply text2image_generator_generate = 15;
        Text2Image_Get_IP_Adapter_Frame_Info_Reply text2image_get_ip_adapter_frame_info = 16;
        Text2Image_Tokenize_Reply text2image_tokenize = 17;
        Text2Image_Generator_Set_Initial_Noise_Reply text2image_generator_set_initial_noise = 18;
        Text2Image_Release_Reply text2image_release = 19;
    }
}

message LLM_Create_Request {
    string lora_name = 1;
    bool is_builtin = 2; // If builtin, the next message is the HEF raw buffers
    string group_id = 3;
}

message LLM_Create_Reply {
    uint32 status = 1;
}

message LLM_Get_Generator_Params_Request {
}

message LLMGeneratorParams {
    float temperature = 1;
    float top_p = 2;
    uint32 top_k = 3;
    float frequency_penalty = 4;
    uint32 max_generated_tokens = 5;
    bool do_sample = 6;
    uint32 seed = 7;
}

message LLM_Get_Generator_Params_Reply {
    LLMGeneratorParams generator_params = 1;
    uint32 status = 2;
}

message LLM_Generator_Create_Request {
    LLMGeneratorParams generator_params = 1;
}

message LLM_Generator_Create_Reply {
    uint32 status = 1;
}

message LLM_Generator_Write_Request {
    // Indicates that the next message to the server is the input prompt
}

message LLM_Generator_Write_Reply {
    uint32 status = 1;
}

message LLM_Generator_Generate_Request {
    // Indicates that the server should start generating text
}

message LLM_Generator_Generate_Reply {
    uint32 status = 1;
}

message LLM_Generator_Read_Request {
    uint32 timeout_ms = 1;
}

message LLM_Generator_Read_Reply {
    string output_token = 1;
    uint32 generation_status = 2;
    uint32 status = 3;
}

message LLM_Tokenize_Request {
    string prompt = 1;
}

message LLM_Tokenize_Reply {
    repeated uint32 tokens = 1;
    uint32 status = 2;
}

message LLM_Clear_Context_Request {
}

message LLM_Clear_Context_Reply {
    uint32 status = 1;
}

message LLM_Release_Request {
}

message LLM_Release_Reply {
    uint32 status = 1;
}

message VLM_Create_Request {
    string group_id = 1;
}

message FrameFormat {
    uint32 format_order = 1;
    uint32 format_type = 2;
}

message FrameShape {
    uint32 height = 1;
    uint32 width = 2;
    uint32 features = 3;
}

message VLM_Create_Reply {
    FrameFormat frame_format = 1;
    FrameShape frame_shape = 2;
    uint32 status = 3;
}

message VLM_Generator_Generate_Request {
    uint32 number_of_frames = 1;
}

message VLM_Generator_Generate_Reply {
    uint32 status = 1;
}

message Text2Image_Create_Request {
    bool is_builtin = 1; // If not builtin, all the hefs will be passed in the next messages as raw buffers
    bool is_ip_adapter = 2;
    uint32 scheduler_type = 3;
    string group_id = 4;

    // HEFs order:
        // text_encoder
        // denoiser
        // image decoder
        // ip adapter
}

message Text2Image_Create_Reply {
    FrameFormat output_frame_format = 1;
    FrameShape output_frame_shape = 2;
    FrameFormat input_noise_frame_format = 3;
    FrameShape input_noise_frame_shape = 4;
    uint32 status = 5;
}

message Text2Image_Get_IP_Adapter_Frame_Info_Request {
}

message Text2Image_Get_IP_Adapter_Frame_Info_Reply {
    FrameFormat format = 1;
    FrameShape shape = 2;
    uint32 status = 3;
}

message ProtoText2ImageGeneratorParams {
    uint32 samples_count = 1;
    uint32 steps_count = 2;
    float guidance_scale = 3;
    uint32 seed = 4;
}

message Text2Image_Get_Generator_Params_Request {
}

message Text2Image_Get_Generator_Params_Reply {
    ProtoText2ImageGeneratorParams generator_params = 1;
    uint32 status = 2;
}

message Text2Image_Generator_Create_Request {
    ProtoText2ImageGeneratorParams generator_params = 1;
}

message Text2Image_Generator_Create_Reply {
    uint32 status = 1;
}

message Text2Image_Generator_Generate_Request {
    bool has_negative_prompt = 1;
    uint32 timeout_ms = 2;
}
message Text2Image_Generator_Generate_Reply {
    uint32 status = 1;
}

message Text2Image_Tokenize_Request {
    string prompt = 1;
}

message Text2Image_Tokenize_Reply {
    repeated uint32 tokens = 1;
    uint32 status = 2;
}

message Text2Image_Release_Request {
}

message Text2Image_Release_Reply {
    uint32 status = 1;
}

message Text2Image_Generator_Set_Initial_Noise_Request {
    // Indicates that the next message to the server is the external noise
}

message Text2Image_Generator_Set_Initial_Noise_Reply {
    uint32 status = 1;
}